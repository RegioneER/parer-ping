<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>sacerping-jboss</artifactId>
        <groupId>it.eng.parer</groupId>
        <version>6.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>sacerping-jboss-ejb</artifactId>
    <packaging>ejb</packaging>
    <name>preingest-ejb</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.4.0.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <!-- Utilizzato per il client ejb remoto sul test -->
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-ejb-client-bom</artifactId>
                <version>7.5.0.Final-redhat-21</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>spagofat-si-util</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                </exclusion>
                <exclusion>
                	<groupId>org.opensaml</groupId>
                	<artifactId>opensaml</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>spagofat-si-client</artifactId>
        </dependency>
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>spagofat-si-server</artifactId>
            <classifier>classes</classifier>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>  
            <groupId>org.jboss.spec</groupId>  
            <artifactId>jboss-jakartaee-8.0</artifactId>  
            <type>pom</type>  
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>sacerping-jboss-slg</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>sacerping-jboss-jpa</artifactId>                             
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preingest-xml</artifactId>                      
        </dependency>    
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>spagofat-paginator-gf</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.xadisk</groupId>
            <artifactId>xadisk</artifactId>
            <!-- DOVREBBE ESSERE PROVIDED ... -->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>sacer-xml</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>
        <dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-databind</artifactId>  
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>it.eng.parer</groupId>    
            <artifactId>parer-test-suite</artifactId>
            <version>0.0.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.javacsv</groupId>
            <artifactId>javacsv</artifactId>
        </dependency>
        <!-- JBoss EJB client API jar. We use runtime scope because the EJB client API
        isn't directly used in this example. We just need it in our runtime classpath -->
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- client communications with the server use XNIO -->
        <dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-nio</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- The client needs JBoss remoting to access the server -->
        <dependency>
            <groupId>org.jboss.remoting3</groupId>
            <artifactId>jboss-remoting</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Remote EJB accesses can be secured -->
        <dependency>
            <groupId>org.jboss.sasl</groupId>
            <artifactId>jboss-sasl</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- data serialization for invoking remote EJBs -->
        <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-river</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>spagofat-timer-wrapper-ejb</artifactId>
            <type>ejb</type>
        </dependency>
        <!-- Incluso per l'ejb del logging applicativo -->
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>spagofat-sl-ejb</artifactId>
            <scope>provided</scope>
            <type>ejb</type>
        </dependency>        
        <!-- Questo Ã¨ il modulo di login dell'IDP, usato come libreria per le funzioni di logging -->
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>idp-jaas-rdbms</artifactId>
        </dependency>        
        <!-- xFormer -->
        <dependency>
            <groupId>it.eng.parer</groupId>
            <artifactId>parer-kettle-soap-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <scope>provided</scope>            
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <scope>provided</scope>
        </dependency>        
        <!-- Amazon S3 -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
        </dependency>   
        <!--dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
        </dependency-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
        </dependency>
		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
		</dependency>                     
    </dependencies>

    <build>
        <plugins>                 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ejb-plugin</artifactId>
                <configuration>                    
                    <ejbVersion>3.1</ejbVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
