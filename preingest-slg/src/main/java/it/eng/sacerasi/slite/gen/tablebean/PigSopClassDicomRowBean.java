/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.sacerasi.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.sacerasi.entity.PigSopClassDicom;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Pig_Sop_Class_Dicom
 *
 */
public class PigSopClassDicomRowBean extends BaseRow implements JEEBaseRowInterface {

    private static final long serialVersionUID = 1L;

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Monday, 17 March 2014 15:12" )
     */

    public static PigSopClassDicomTableDescriptor TABLE_DESCRIPTOR = new PigSopClassDicomTableDescriptor();

    public PigSopClassDicomRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdSopClassDicom() {
        return getBigDecimal("id_sop_class_dicom");
    }

    public void setIdSopClassDicom(BigDecimal idSopClassDicom) {
        setObject("id_sop_class_dicom", idSopClassDicom);
    }

    public String getCdSopClassDicom() {
        return getString("cd_sop_class_dicom");
    }

    public void setCdSopClassDicom(String cdSopClassDicom) {
        setObject("cd_sop_class_dicom", cdSopClassDicom);
    }

    public String getDsSopClassDicom() {
        return getString("ds_sop_class_dicom");
    }

    public void setDsSopClassDicom(String dsSopClassDicom) {
        setObject("ds_sop_class_dicom", dsSopClassDicom);
    }

    @Override
    public void entityToRowBean(Object obj) {
        PigSopClassDicom entity = (PigSopClassDicom) obj;

        this.setIdSopClassDicom(new BigDecimal(entity.getIdSopClassDicom()));
        this.setCdSopClassDicom(entity.getCdSopClassDicom());
        this.setDsSopClassDicom(entity.getDsSopClassDicom());
    }

    @Override
    public PigSopClassDicom rowBeanToEntity() {
        PigSopClassDicom entity = new PigSopClassDicom();
        if (this.getIdSopClassDicom() != null) {
            entity.setIdSopClassDicom(this.getIdSopClassDicom().longValue());
        }
        entity.setCdSopClassDicom(this.getCdSopClassDicom());
        entity.setDsSopClassDicom(this.getDsSopClassDicom());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
