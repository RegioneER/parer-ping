/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.sacerasi.slite.gen.viewbean;

import java.math.BigDecimal;

import it.eng.sacerasi.viewEntity.MonVObjNonVers;
import it.eng.sacerasi.viewEntity.MonVObjNonVersId;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Mon_V_Obj_Non_Vers
 *
 */
public class MonVObjNonVersRowBean extends BaseRow implements JEEBaseRowInterface {

    private static final long serialVersionUID = 1L;

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Monday, 17 March 2014 15:12" )
     */

    public static MonVObjNonVersTableDescriptor TABLE_DESCRIPTOR = new MonVObjNonVersTableDescriptor();

    public MonVObjNonVersRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdVers() {
	return getBigDecimal("id_vers");
    }

    public void setIdVers(BigDecimal idVers) {
	setObject("id_vers", idVers);
    }

    public String getCdKeyObject() {
	return getString("cd_key_object");
    }

    public void setCdKeyObject(String cdKeyObject) {
	setObject("cd_key_object", cdKeyObject);
    }

    public String getNmTipoObject() {
	return getString("nm_tipo_object");
    }

    public void setNmTipoObject(String nmTipoObject) {
	setObject("nm_tipo_object", nmTipoObject);
    }

    public String getFlVerif() {
	return getString("fl_verif");
    }

    public void setFlVerif(String flVerif) {
	setObject("fl_verif", flVerif);
    }

    public String getFlNonRisolub() {
	return getString("fl_non_risolub");
    }

    public void setFlNonRisolub(String flNonRisolub) {
	setObject("fl_non_risolub", flNonRisolub);
    }

    @Override
    public void entityToRowBean(Object obj) {
	MonVObjNonVers entity = (MonVObjNonVers) obj;
	this.setIdVers(entity.getMonVObjNonVersId() == null ? null
		: entity.getMonVObjNonVersId().getIdVers());
	this.setCdKeyObject(entity.getMonVObjNonVersId() == null ? null
		: entity.getMonVObjNonVersId().getCdKeyObject());
	this.setNmTipoObject(entity.getNmTipoObject());
	this.setFlVerif(entity.getFlVerif());
	this.setFlNonRisolub(entity.getFlNonRisolub());
    }

    @Override
    public MonVObjNonVers rowBeanToEntity() {
	MonVObjNonVers entity = new MonVObjNonVers();
	entity.setMonVObjNonVersId(new MonVObjNonVersId());
	entity.getMonVObjNonVersId().setIdVers(this.getIdVers());
	entity.getMonVObjNonVersId().setCdKeyObject(this.getCdKeyObject());
	entity.setNmTipoObject(this.getNmTipoObject());
	entity.setFlVerif(this.getFlVerif());
	entity.setFlNonRisolub(this.getFlNonRisolub());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
